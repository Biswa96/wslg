resources:
  repositories:
  - repository: FreeRDP
    type: github
    endpoint: GitHub connection 1
    name: microsoft/FreeRDP-mirror
    ref: working
  - repository: weston
    type: github
    endpoint: GitHub connection 1
    name: microsoft/weston-mirror
    ref: working
  - repository: pulseaudio
    type: github
    endpoint: GitHub connection 1
    name: microsoft/pulseaudio-mirror
    ref: working
  - repository: mesa
    type: github
    endpoint: GitHub connection 1
    name: mesa3d/mesa
    ref: 21.0    
  - repository: sharedguestalloc
    type: git
    name: DxgkLinux/sharedguestalloc
    ref: master

trigger:
  - working
jobs:
- job: 'Build_Ubuntu'
  displayName: 'Build (Ubuntu Pipeline)'
  variables:
    - group: 'Keys'

  pool:
    vmImage: 'ubuntu-latest'
    
  steps:
    - checkout: FreeRDP
    - checkout: weston
    - checkout: pulseaudio
    - checkout: mesa
    - checkout: sharedguestalloc
    - checkout: self

    - task: DockerInstaller@0
      inputs:
        dockerVersion: '20.10.2'
        releaseType: 'stable'
    - bash: |
            curl -L -o ~/.docker/cli-plugins/docker-buildx --create-dirs ${BUILDX_URL}
            chmod a+x ~/.docker/cli-plugins/docker-buildx
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            ~/.docker/cli-plugins/docker-buildx create --use
            ~/.docker/cli-plugins/docker-buildx inspect --bootstrap
      displayName: Prepare buildx
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
      env:
        BUILDX_URL: https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64

    - script: |
              echo '{ "experimental": true }' | sudo tee /etc/docker/daemon.json
              sudo service docker restart
      displayName: 'Enable Docker Engine experimental '

    - script: mv FreeRDP-mirror/ wslg/vendor/FreeRDP &&
              mv weston-mirror/ wslg/vendor/weston &&
              mv pulseaudio-mirror/ wslg/vendor/pulseaudio &&
              mv mesa/ wslg/vendor/mesa &&
              mv sharedguestalloc/ wslg/vendor/sharedguestalloc
      displayName: 'Move sub projects (FreeRDP, Weston, PulseAudio, Mesa)'

    - script: wget https://github.com/GitTools/GitVersion/releases/download/5.3.7/gitversion-ubuntu.18.04-x64-5.3.7.tar.gz &&
              tar -xvf gitversion-ubuntu.18.04-x64-5.3.7.tar.gz &&
              sudo mv gitversion /usr/local/bin
      displayName: 'Install GitVersion'
    
    - script: docker build -f ./wslg/Dockerfile -t system-distro-x64 
              ./wslg 
              --build-arg WSLG_VERSION=`gitversion /targetpath ./wslg /showvariable InformationalVersion`
              --build-arg WSLG_ARCH=x86_64
      displayName: 'Create System Distro Docker image Mariner-x64'

    - script: docker export `docker create system-distro-x64` > $(Agent.BuildDirectory)/system_x64.tar
      displayName: 'Create system_x64.tar'

    - script: ~/.docker/cli-plugins/docker-buildx build -f ./wslg/Dockerfile
              --output type=tar,dest=$(Agent.BuildDirectory)/system_arm64.tar 
              --platform=linux/arm64 
              ./wslg 
              --build-arg WSLG_VERSION=`gitversion /targetpath ./wslg /showvariable InformationalVersion` 
              --build-arg WSLG_ARCH=aarch64
      displayName: 'Create system_arm64.tar'
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

    - script: git clone --branch v0.8.14 --single-branch https://github.com/microsoft/hcsshim.git
      displayName: 'Clone hcsshim repo for tar2ext4 tool'

    - task: Go@0
      inputs:
        command: 'custom'
        customCommand: 'run'
        arguments: 'tar2ext4.go -vhd -i $(Agent.BuildDirectory)/system_x64.tar -o $(Agent.BuildDirectory)/system_x64.vhd'
        workingDirectory: 'hcsshim/cmd/tar2ext4'
      displayName: 'Create system_x64.vhd'

    - task: Go@0
      inputs:
        command: 'custom'
        customCommand: 'run'
        arguments: 'tar2ext4.go -vhd -i $(Agent.BuildDirectory)/system_arm64.tar -o $(Agent.BuildDirectory)/system_arm64.vhd'
        workingDirectory: 'hcsshim/cmd/tar2ext4'
      displayName: 'Create system_arm64.vhd'
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

    - task: PublishPipelineArtifact@1
      displayName: 'Publish system_arm64.vhd artifact'
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
      inputs:
        targetPath: $(Agent.BuildDirectory)/system_arm64.vhd
        artifact: 'system_arm64.vhd'
        publishLocation: 'pipeline'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish system_x64.vhd artifact'
      inputs:
        targetPath: $(Agent.BuildDirectory)/system_x64.vhd
        artifact: 'system_x64.vhd'
        publishLocation: 'pipeline'
        
- job: 'Build_Windows'
  dependsOn: 'Build_Ubuntu'
  displayName: 'Package (Windows)'
  
  pool:
    vmImage: 'windows-2019'
    demands:
    - msbuild
    - visualstudio

  steps:
  - checkout: self

  - powershell: 'Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(''https://chocolatey.org/install.ps1''))'
    displayName: 'Install Choco'

  - script: 'choco install gitversion.portable --pre'
    displayName: 'Install GitVersion'
    
  - powershell: Invoke-WebRequest https://wixtoolset.org/downloads/v3.14.0.4118/wix314-binaries.zip -OutFile wix314-binaries.zip;
                Expand-Archive wix314-binaries.zip -DestinationPath $(Agent.BuildDirectory)\wix314-binaries
    displayName: 'Install Wix'

  - task: DownloadPipelineArtifact@2
    displayName: 'Download system_x64.vhd'
    inputs:
      buildType: 'current'
      artifactName: 'system_x64.vhd'
      targetPath: 'msi/'

  - task: DownloadPipelineArtifact@2
    displayName: 'Download system_arm64.vhd'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      buildType: 'current'
      artifactName: 'system_arm64.vhd'
      targetPath: 'msi/'

  - task: MSBuild@1
    displayName: 'Build RDP Plugin (x64)'
    inputs:
      solution: './WSLDVCPlugin/WSLDVCPlugin.sln'
      platform: 'x64'
      configuration: 'Release'

  - task: MSBuild@1
    displayName: 'Build RDP Plugin (ARM64)'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      solution: './WSLDVCPlugin/WSLDVCPlugin.sln'
      platform: 'ARM64'
      configuration: 'Release'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish WSLDVCPlugin pdb (x64)'
    inputs:
      targetPath: WSLDVCPlugin\x64\Release\WSLDVCPlugin.pdb
      artifact: 'x64.WSLDVCPlugin.pdb'
      publishLocation: 'pipeline'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish WSLDVCPlugin pdb (ARM64)'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      targetPath: WSLDVCPlugin\ARM64\Release\WSLDVCPlugin.pdb
      artifact: 'ARM64.WSLDVCPlugin.pdb'
      publishLocation: 'pipeline'

  - script: 'MOVE WSLDVCPlugin\x64\Release\WSLDVCPlugin.dll msi\WSLDVCPlugin_x64.dll'
    displayName: 'Move plugin to msi (x64)'

  - script: 'MOVE WSLDVCPlugin\ARM64\Release\WSLDVCPlugin.dll msi\WSLDVCPlugin_ARM64.dll'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    displayName: 'Move plugin to msi (ARM64)'

  - task: PowerShell@2
    displayName: 'Update wslg.wxs version'
    inputs:
      targetType: filePath
      filePath: .\updateversion.ps1 
      arguments: .\msi\wslg.wxs "Wix.Product" "Version" 
      pwsh: true

  - script: '$(Agent.BuildDirectory)\wix314-binaries\candle.exe wslg.wxs -arch x64 -dVhdFile=system_x64.vhd -dPlatform=x64 -o obj_x64\'
    workingDirectory: msi
    displayName: 'WiX Candle (x64)'

  - script: '$(Agent.BuildDirectory)\wix314-binaries\light.exe obj_x64\wslg.wixobj -o bin\wsl_graphics_update_x64.msi'
    workingDirectory: msi
    displayName: 'WiX Light (x64)'

  - script: '$(Agent.BuildDirectory)\wix314-binaries\candle.exe wslg.wxs -arch arm64 -dVhdFile=system_arm64.vhd -dPlatform=arm64 -o obj_arm64\'
    workingDirectory: msi
    displayName: 'WiX Candle (arm64)'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

  - script: '$(Agent.BuildDirectory)\wix314-binaries\light.exe obj_arm64\wslg.wixobj -o bin\wsl_graphics_update_arm64.msi'
    workingDirectory: msi
    displayName: 'WiX Light (arm64)'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

  - task: PublishPipelineArtifact@1
    displayName: 'Publish WSLg installer'
    inputs:
      targetPath: msi/bin/wsl_graphics_update_x64.msi
      artifact: 'wsl_graphics_update_x64.msi'
      publishLocation: 'pipeline'

  - task: PublishPipelineArtifact@1
    displayName: 'Publish WSLg installer ARM64'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      targetPath: msi/bin/wsl_graphics_update_arm64.msi
      artifact: 'wsl_graphics_update_arm64.msi'
      publishLocation: 'pipeline'

  - task: PowerShell@2
    displayName: 'Update Microsoft.WSLg.nuspec version'
    inputs:
      targetType: filePath
      filePath: .\updateversion.ps1 
      arguments: .\Microsoft.WSLg.nuspec "package.metadata.version" "" "-beta"
      pwsh: true

  - task: PowerShell@2
    displayName: 'Update Microsoft.WSLg.nuspec release notes'
    inputs:
      targetType: filePath
      filePath: .\updateversion.ps1 
      arguments: .\Microsoft.WSLg.nuspec "package.metadata.releaseNotes" "" "-beta" 'hash'
      pwsh: true

  - script: 'nuget pack .\Microsoft.WSLg.nuspec'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    displayName: 'Package NuGet'

  - script: 'rename *.nupkg Microsoft.WSLg.nupkg'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    displayName: 'Rename Nuget Package'

  - task: PublishPipelineArtifact@1
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    displayName: 'Save Microsoft.WSLg.nupkg artifact'
    inputs:
      targetPath: Microsoft.WSLg.nupkg
      artifact: 'Microsoft.WSLg.nupkg'
      publishLocation: 'pipeline'

  - task: NuGetAuthenticate@0
    inputs:
      nuGetServiceConnections: 'NuGetConnection'

  - task: '333b11bd-d341-40d9-afcf-b32d5ce6f23b@2'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    displayName: 'Push Nuget Package (lifted_wsl feed)'
    continueOnError: true
    inputs:
      command: push
      packagesToPush: 'Microsoft.WSLg.nupkg'
      nuGetFeedType: 'external'
      publishFeedCredentials: 'NuGetConnection'
      verbosityPush: 'Normal'
      publishVstsFeed: Base/lifted_wsl
